{
    "componentChunkName": "component---src-pages-mdx-fields-category-mdx-fields-sub-category-mdx-fields-short-slug-js",
    "path": "/javascript/basics/strings/",
    "result": {"data":{"mdx":{"frontmatter":{"title":"Strings","date":"April 7, 2022","description":"Useful tricks with strings"},"fields":{"subCategory":"basics"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Strings\",\n  \"date\": \"2022-04-07\",\n  \"description\": \"Useful tricks with strings\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Strings\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Note:\"), \" all strings in JavaScript are encoded in UTF-16.\")), mdx(\"p\", null, \"Examples of strings:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"const name = \\\"Mark\\\";\\n\\n\\\"\\\" // Empty string\\n'something' // Single quote\\n\\\"something else\\\" // Double qoute\\n`Hello ${name}!` // Template literal\\n\")), mdx(\"h2\", null, \"Multiline strings\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"// Escaped new line\\n'Two\\\\nlines'\\n\\n// Escape char at the end of line\\n\\\"One \\\\\\nLong \\\\\\nEscaped \\\\\\nline.\\\"\\n\\n// Multiline template literal\\n`Test this\\ntwo lines text`\\n\")), mdx(\"h2\", null, \"String methods\"), mdx(\"p\", null, \"String object has useful methods:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"let s = \\\"Hello World!\\\";\\n\\n// Extract string parts\\ns.substring (1, 4); // => \\\"ell\\\"\\ns.slice(1, 4); // String is like an array with chars so => \\\"ell\\\"\\ns.split(\\\" \\\"); // => [\\\"Hello\\\", \\\"World\\\"]\\n\\n// Find substring\\ns.indexOf(\\\"H\\\"); // First \\\"H\\\" => 0\\ns.indexOf(\\\"zz\\\"); // There is no \\\"zz\\\" => -1\\ns.lastIndexOf(\\\"o\\\"); // Last \\\"o\\\" => 7\\n\\n// Check if contains substring\\ns.startsWith(\\\"Hello\\\"); // => true\\ns.endsWith(\\\"d\\\") // => false\\ns.includes(\\\"ello\\\") // => true\\n\\n// String conversion\\ns.replace(\\\"Hello\\\", \\\"Witaj\\\"); // => \\\"Witaj World!\\\"\\ns.toLowerCase();\\ns.toUpperCase();\\ns.normalize(\\\"NFC\\\"); // Unicode NFC normalization (more info about that in a link below)\\n\\n// Chars at specific position\\ns[0]; // => \\\"H\\\"\\ns.charAt(0); // This is an equivalent to line above\\ns.charAt(s.length - 1); // Last char => \\\"!\\\"\\ns.charCodeAt(0); // 16 bit charcode => 72\\ns.codePoinitAt(0); // The same but for chars longer than 16 bit (since ES6)\\n\\n// String completion (since ES8/2017)\\n\\\"x\\\".padStart(3); // Add spaces to the total length of 3 => \\\"  x\\\"\\n\\\"x\\\".padEnd(3);\\n\\\"x\\\".padStart(3, \\\"+\\\"); // => \\\"++x\\\"\\n\\\"x\\\".padEnd(3, \\\"+\\\"); // => \\\"x++\\\"\\n\\n// Automatic spaces removal (since ES10/2019)\\n\\\" test \\\".trim(); // => \\\"test\\\"\\n\\\" test \\\".trimStart(); // => \\\"test \\\"\\n\\\" test \\\".trimEnd(); // => \\\" test\\\"\\n\\n// Others\\ns.concat(\\\"!!\\\"); // => \\\"Hello World!!!\\\"\\n\\\"*\\\".repeat(6); // => \\\"******\\\"\\n\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"This is funny polish joke: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"${\\\"*\\\".repeat(5)} ${\\\"*\\\".repeat(3)}\"), \" \\uD83D\\uDE09\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://towardsdatascience.com/difference-between-nfd-nfc-nfkd-and-nfkc-explained-with-python-code-e2631f96ae6c\"\n  }, \"Difference Between NFD, NFC, NFKD, and NFKC normalization\")));\n}\n;\nMDXContent.isMDXComponent = true;"},"allMdx":{"group":[{"fieldValue":"advanced","edges":[{"node":{"frontmatter":{"title":"Flatten array of Maps"},"fields":{"shortSlug":"flatten-array-of-maps","subCategory":"advanced"},"slug":"javascript/advanced/flatten-array-of-maps/"}},{"node":{"frontmatter":{"title":"Asynchronous chunking"},"fields":{"shortSlug":"asynchronous-chunking","subCategory":"advanced"},"slug":"javascript/advanced/asynchronous-chunking/"}}],"totalCount":2},{"fieldValue":"basics","edges":[{"node":{"frontmatter":{"title":"For loops"},"fields":{"shortSlug":"for-loops","subCategory":"basics"},"slug":"javascript/basics/for-loops/"}},{"node":{"frontmatter":{"title":"Strings"},"fields":{"shortSlug":"strings","subCategory":"basics"},"slug":"javascript/basics/strings/"}},{"node":{"frontmatter":{"title":"Promises"},"fields":{"shortSlug":"promises","subCategory":"basics"},"slug":"javascript/basics/promises/"}},{"node":{"frontmatter":{"title":"instanceof operator"},"fields":{"shortSlug":"instanceof-operator","subCategory":"basics"},"slug":"javascript/basics/instanceof-operator/"}},{"node":{"frontmatter":{"title":"in operator"},"fields":{"shortSlug":"in-operator","subCategory":"basics"},"slug":"javascript/basics/in-operator/"}},{"node":{"frontmatter":{"title":"Nullish Coalescing Operator"},"fields":{"shortSlug":"nullish-coalescing-operator","subCategory":"basics"},"slug":"javascript/basics/nullish-coalescing-operator/"}},{"node":{"frontmatter":{"title":"Optional chaining"},"fields":{"shortSlug":"optional-chaining","subCategory":"basics"},"slug":"javascript/basics/optional-chaining/"}},{"node":{"frontmatter":{"title":"Destructuring assignment"},"fields":{"shortSlug":"destructuring","subCategory":"basics"},"slug":"javascript/basics/destructuring/"}},{"node":{"frontmatter":{"title":"Symbols"},"fields":{"shortSlug":"symbols","subCategory":"basics"},"slug":"javascript/basics/symbols/"}}],"totalCount":9},{"fieldValue":"debug","edges":[{"node":{"frontmatter":{"title":"console.log usage"},"fields":{"shortSlug":"console-log","subCategory":"debug"},"slug":"javascript/debug/console-log/"}}],"totalCount":1},{"fieldValue":"dom","edges":[{"node":{"frontmatter":{"title":"querySelector"},"fields":{"shortSlug":"query-selector","subCategory":"dom"},"slug":"javascript/dom/query-selector/"}}],"totalCount":1},{"fieldValue":"events","edges":[{"node":{"frontmatter":{"title":"Long mouse event"},"fields":{"shortSlug":"long-mouse-event","subCategory":"events"},"slug":"javascript/events/long-mouse-event/"}},{"node":{"frontmatter":{"title":"Event delegation"},"fields":{"shortSlug":"event-delegation","subCategory":"events"},"slug":"javascript/events/event-delegation/"}}],"totalCount":2},{"fieldValue":"math","edges":[{"node":{"frontmatter":{"title":"Random number in the range"},"fields":{"shortSlug":"random-number","subCategory":"math"},"slug":"javascript/math/random-number/"}}],"totalCount":1}]}},"pageContext":{"id":"a6546535-4649-5d94-b951-ad6411e5f070","fields__category":"javascript","fields__subCategory":"basics","fields__shortSlug":"strings","__params":{"fields__category":"javascript","fields__subCategory":"basics","fields__shortSlug":"strings"}}},
    "staticQueryHashes": ["2420640694"]}