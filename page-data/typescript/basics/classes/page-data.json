{
    "componentChunkName": "component---src-pages-mdx-fields-category-mdx-fields-sub-category-mdx-fields-short-slug-js",
    "path": "/typescript/basics/classes/",
    "result": {"data":{"mdx":{"frontmatter":{"title":"Basic classes","date":"December 14, 2021","description":"Classes in TS"},"fields":{"subCategory":"basics"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Basic classes\",\n  \"date\": \"2021-12-14\",\n  \"description\": \"Classes in TS\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Basic classes\"), mdx(\"p\", null, \"Standard:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"export class TodoItem {\\n  public id: number;\\n  public task: string;\\n  public complete: boolean = false;\\n\\n  public constructor(id: number, task: string, complete: boolean = false) {\\n    this.id = id;\\n    this.task = task;\\n    this.complete = complete;\\n  }\\n}\\n\")), mdx(\"p\", null, \"Concise version:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-ts\"\n  }, \"export class TodoItem {\\n    constructor(public id: number,\\n                public task: string,\\n                public complete: boolean = false) {\\n      // no statements required\\n    }\\n}\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Notice:\"), \" Access control keywords are provided by the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"TypeScript\"), \". In \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"JavaScript\"), \" you can declare private fields using \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"#\"), \" symbol. More info is available \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes/Private_class_fields\"\n  }, \"here\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;"},"allMdx":{"group":[{"fieldValue":"basics","edges":[{"node":{"frontmatter":{"title":"Basic classes"},"fields":{"shortSlug":"classes","subCategory":"basics"},"slug":"typescript/basics/classes/"}}],"totalCount":1}]}},"pageContext":{"id":"0cf7c72a-d442-5f99-ac44-68c0b5814ee5","fields__category":"typescript","fields__subCategory":"basics","fields__shortSlug":"classes","__params":{"fields__category":"typescript","fields__subCategory":"basics","fields__shortSlug":"classes"}}},
    "staticQueryHashes": ["2420640694"]}